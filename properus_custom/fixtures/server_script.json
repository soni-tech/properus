[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-08-30 18:29:02.438460",
  "module": null,
  "name": "tes item po",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "import frappe\r\n\r\n@frappe.whitelist()\r\ndef get_items_for_stock_entry(custom_nomor_dokumen, custom_tanggal_dokumen=None):\r\n    # Ambil semua item_code dari Purchase Receipt Item\r\n    pr = frappe.get_list(\r\n        \"Purchase Receipt\",\r\n        filters={\"custom_nomor_dokumen\": custom_nomor_dokumen},\r\n        fields=[\"name\"]\r\n    )\r\n    if not pr:\r\n        return []\r\n\r\n    pr_name = pr[0].name\r\n\r\n    items = frappe.db.sql(\"\"\"\r\n        SELECT i.name, i.item_code, i.item_name\r\n        FROM `tabItem` i\r\n        INNER JOIN `tabPurchase Receipt Item` pri ON pri.item_code = i.item_code\r\n        WHERE pri.parent=%s\r\n    \"\"\", pr_name, as_dict=True)\r\n\r\n    return items\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-04 14:58:41.285227",
  "module": null,
  "name": "TES SO",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Stock Reconciliation",
  "script": "for row in doc.items:\r\n    # cek apakah sudah ada transaksi selain Stock Reconciliation opening\r\n    exists = frappe.db.exists(\r\n        \"Stock Ledger Entry\",\r\n        {\r\n            \"item_code\": row.item_code,\r\n            \"is_cancelled\": 0\r\n        }\r\n    )\r\n\r\n    if exists and doc.purpose == \"Opening Stock\":\r\n        frappe.throw(\r\n            f\"Item {row.item_code} sudah punya transaksi, tidak boleh diset lagi sebagai Opening Stock.\"\r\n        )\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "On Payment Authorization",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-04 14:58:34.651087",
  "module": null,
  "name": "tes yaa",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Pemasukan Barang",
  "script": "import frappe\r\n\r\n# redirect ke Doctype Pemasukan Barang\r\nfrappe.local.response[\"type\"] = \"redirect\"\r\nfrappe.local.response[\"location\"] = \"/app/pemasukan-barang\"\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "",
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-09 23:13:48.302630",
  "module": null,
  "name": "post",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "import requests\r\n\r\nurl = \"https://httpbin.org/post\"\r\npayload = {\"from\": \"ERPNext\", \"msg\": \"Hello Dummy API\"}\r\nheaders = {\"Content-Type\": \"application/json\"}\r\n\r\nres = requests.post(url, json=payload, headers=headers)\r\nresponse = res.json()\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "POST",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-08 22:03:39.982532",
  "module": null,
  "name": "test_httpbin",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "import requests\r\n\r\n# URL API dummy\r\nurl = \"https://httpbin.org/post\"\r\n\r\n# Data JSON yang dikirim\r\npayload = {\"hello\": \"erpnext\"}\r\n\r\n# Headers\r\nheaders = {\"Content-Type\": \"application/json\"}\r\n\r\n# Kirim POST request\r\nres = requests.post(url, json=payload, headers=headers)\r\n\r\n# Balikin response ke ERPNext\r\nresponse = res.json()\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-09 23:14:19.448423",
  "module": null,
  "name": "tes",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Pengeluaran Barang",
  "script": "import uuid\r\n\r\n# Jika dokumen baru, set name pakai UUID 12 karakter\r\nif not doc.name or doc.name.startswith('Auto'):\r\n    # Ambil 12 karakter pertama dari UUID\r\n    doc.name = str(uuid.uuid4()).replace('-', '')[:12]\r\n",
  "script_type": "DocType Event"
 }
]